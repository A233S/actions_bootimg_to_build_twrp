name: twrp-building
on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Run the build with tmate debugging enabled'     
        required: false
        default: true
jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@master
    - name: Clean Up
      run: |
#        docker rmi `docker images -q`
#        sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/sudo apt/sources.list.d
#        sudo apt -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
#        sudo apt update
#       sudo apt -y autoremove --purge
#        sudo apt clean 
    - name: Update packages
      run: |
        sudo apt update
        sudo apt full-upgrade
    - name: Install required packages
      run: sudo apt install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc unzip jq
    - name: Install Repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
    - name: Initialize Repair Manifest
      run: git clone https://github.com/TeamWin/buildtree_manifests.git repair
    - name: Get variables
      run: |
        echo "::set-output name=twrp_url::$(jq -r '.twrp_url' config.json)"
        echo "::set-output name=twrp_branch::$(jq -r '.twrp_branch' config.json)"
        echo "::set-output name=git_username::$(jq -r '.git_username' config.json)"
        echo "::set-output name=git_email::$(jq -r '.git_email' config.json)"
        echo "::set-output name=bootimg_url::$(jq -r '.bootimg_url' config.json)"
        echo "::set-output name=fix_product::$(jq -r '.fix_product' config.json)"
        echo "::set-output name=fix_misscom::$(jq -r '.fix_misscom' config.json)"
        echo "::set-output name=fix_busybox::$(jq -r '.fix_busybox' config.json)"
        echo "::set-output name=fix_branch::$(jq -r '.fix_branch' config.json)"
        echo "::set-output name=date::$(date +%F)"
      id: var
    - name: Initialize a Repo client
      run: |
        PATH=~/bin:$PATH
        mkdir workspace
        cd workspace
        echo "::set-output name=pwd::$(pwd)"
        git config --global user.name "${{ steps.var.outputs.git_username }}"
        git config --global user.email "${{ steps.var.outputs.git_email }}"
        repo init --depth=1 -u ${{ steps.var.outputs.twrp_url }} -b ${{ steps.var.outputs.twrp_branch }}
        mkdir .repo/local_manifests
      id: pwd
    - name: Fix the bug of missing common
      if: steps.var.outputs.fix_misscom == 'true'
      run: cp repair/omni-9.0/qcom.xml workspace/.repo/local_manifests/
    - name: Fix busybox bug
      if: steps.var.outputs.fix_busybox == 'true'
      run: cp repair/omni-9.0/busybox.xml workspace/.repo/local_manifests/
    - name: Repo sync
      run: |
        PATH=~/bin:$PATH
        cd workspace
        repo sync -c -j$(nproc --all) --force-sync --no-clone-bundle --no-tags
        ls -al
    - name: use boot to make your own device tree
      run: |
        home=$(pwd)
        sudo apt update
        sudo apt -y install python2-minimal python2 dh-python python-is-python3 python3 python3-pip cpio wget
        pip3 install twrpdtgen
        mkdir dt
        wget -O boot.img ${{ steps.var.outputs.bootimg_url }}
        python3 -m twrpdtgen -o dt/ boot.img
        cd dt
        brand=$(ls)
        cd $brand
        device_code=$(ls)
        echo "::set-output name=device_code::$(ls)"
        cd $home
        cp -r ./dt/$brand ./${{ steps.pwd.outputs.pwd }}/device/
      id: dt
    - name: Fix cannot locate product
      if: steps.var.outputs.fix_product == 'true'
      run: |
        cd ${{ steps.pwd.outputs.pwd }}/build/core
        rm -rf product_config.mk
        cp ${{ steps.pwd.outputs.pwd }}/../build/core/${{ steps.var.outputs.fix_branch }}/product_config.mk ${{ steps.pwd.outputs.pwd }}/build/core/product_config.mk
    - name: Start Building
      run: |
        PATH=~/bin:$PATH
        cd ${{ steps.pwd.outputs.pwd }}
        tree device
        export ALLOW_MISSING_DEPENDENCIES=true
        source build/envsetup.sh
        lunch omni_${{ steps.dt.outputs.device_code }}-eng 
        mka recoveryimage -j$(nproc --all)
    - name: Setup tmate session
      if: ${{ failure()  && inputs.debug_enabled }}
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 15
    - name: Upload TWRP
      uses: actions/upload-artifact@v1.0.0
      with:
        name: ${{ steps.var.outputs.date }} ${{ steps.var.outputs.device_code }} by ${{ steps.var.outputs.git_username }}
        path: workspace/out/target/product/kiwi/recovery.img

